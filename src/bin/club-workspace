#!/usr/bin/env node
const { execSync } = require('child_process');
const configure    = require('../lib/configure.js');
const config       = configure.loadConfig();
const log          = console.log;
var program        = require('commander');

program
    .description('List stories matching saved workspace query')
    .option('-l, --list', 'List saved workspaces')
    .option('-n, --name [name]', 'Load named workspace', 'default')
    .option('-u, --unset [name]', 'Force unset saved workspace')
    .parse(process.argv);

if (!config || !config.token) {
    log('Not installed yet.');
    log('Please run: club install');
} else if (!config.workspaces) {
    log('No workspace saved.');
    log('Please run:');
    log('  club find [options] --save');
    log('to create your first one.');
} else if (program.list) {
    log('Workspaces:');
    Object.keys(config.workspaces)
        .map(w => {
            log(' ', w + ':', toArgs(config.workspaces[w]));
        });
} else if (program.unset) {
    const success = configure.removeWorkspace(program.unset);
    if (success) {
        log('Successfully removed %s workspace', program.unset);
    }
} else {
    const workspace = config.workspaces[program.name];
    if (!workspace) {
        log('No workspace saved with name', program.name);
        log('Please run:');
        log('  club find [options] --save', program.name);
        log('to create it.');
    } else {
        log('Loading workspace %s:', program.name, toArgs(workspace));
        log();
        const output = execSync('club find ' + toArgs(workspace))
            .toString('utf8');
        log(output);
    }
}

function toArgs(obj) {
    return Object.keys(obj)
        .map(k => {
            return `--${k} '${obj[k]}'`;
        }).join(' ');
}
